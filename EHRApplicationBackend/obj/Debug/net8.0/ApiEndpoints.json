[
  {
    "ContainingType": "EHRApplicationBackend.Controllers.AppointmentController",
    "Method": "BookAppointment",
    "RelativePath": "api/Appointment/BookAppointment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookAppointmentDto",
        "Type": "App.Core.Models.Appointment.BookAppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.AppointmentController",
    "Method": "CancelAppointmentById",
    "RelativePath": "api/Appointment/CancelAppointmentById/{appointmentId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.AppointmentController",
    "Method": "GetAppoinmentsByPatientId",
    "RelativePath": "api/Appointment/GetAppoinmentsByPatientId/{patientId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "patientId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.AppointmentController",
    "Method": "GetAppoinmentsByProvidertId",
    "RelativePath": "api/Appointment/GetAppoinmentsByProvidertId/{providerId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "providerId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.AppointmentController",
    "Method": "GetAppointmentWithSOAPNotes",
    "RelativePath": "api/Appointment/GetAppointmentWithSOAPNotes/{appointmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.AppointmentController",
    "Method": "PaymentBookAppointment",
    "RelativePath": "api/Appointment/PaymentBookAppointment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookAppointmentDto",
        "Type": "App.Core.Models.Appointment.PaymentAndBookAppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CountryStateController",
    "Method": "GetAllCountries",
    "RelativePath": "api/CountryState/GetAllCountries",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.CountryStateController",
    "Method": "GetAllStatesByCountryId",
    "RelativePath": "api/CountryState/GetAllStatesByCountryId/{countryId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "countryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ImageUpload.Controllers.ImageController",
    "Method": "UploadFile",
    "RelativePath": "api/Image/UploadFile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom_Assessment_Backend.Controllers.OtpController",
    "Method": "SendOtp",
    "RelativePath": "api/Otp/SendOtp/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.SOAPNotesController",
    "Method": "SaveSOAPNotes",
    "RelativePath": "api/SOAPNotes/SaveSOAPNotes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "soapNotesDto",
        "Type": "App.Core.Models.SOAPNotes.SOAPNotesDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.SpecializationController",
    "Method": "GetAllSpecialization",
    "RelativePath": "api/Specialization/GetAllSpecialization",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "ForgetPassword",
    "RelativePath": "api/User/ForgetPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgetPasswordDto",
        "Type": "App.Core.Models.Users.ForgetPasswordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "ForgotPasswordWithRandomString",
    "RelativePath": "api/User/ForgotPasswordWithRandomString/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "GetAllPatientNameId",
    "RelativePath": "api/User/GetAllPatientNameId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "GetLoggedUser",
    "RelativePath": "api/User/GetLoggedUser/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "GetProvidersBySpecializationId",
    "RelativePath": "api/User/GetProvidersBySpecializationId/{specializationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "specializationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "LoginUser",
    "RelativePath": "api/User/LoginUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginUserDto",
        "Type": "App.Core.Models.User.LoginUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "LoginUserValidateOtp",
    "RelativePath": "api/User/LoginUserValidateOtp",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginUserValidateOtpDto",
        "Type": "App.Core.Models.Users.LoginUserValidateOtpDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "RegisterPatient",
    "RelativePath": "api/User/RegisterPatient",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createPatientDto",
        "Type": "App.Core.Models.User.CreatePatientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EHRApplicationBackend.Controllers.UserController",
    "Method": "RegisterProvider",
    "RelativePath": "api/User/RegisterProvider",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createProvider",
        "Type": "App.Core.Models.User.CreateProviderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]